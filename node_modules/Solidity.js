var Contract = require("Contract.js");
var Transaction = require("Transaction.js");

module.exports = Solidity;

function Solidity(code) {
    this.code = code;
    this.vmCode = undefined;
    this.abi = undefined;
    this.symtab = undefined;

    this.toContract = compileAndSubmit.bind(this);
    this.compile = compileSolidity.bind(this);
}

function compileAndSubmit(apiURL, fromAccount, value,
                          gasPrice, gasLimit, callback) {
    function contractCallback(address) {
        var contract = new Contract(address, this.abi, this.symtab);
        callback(contract);
    }
    function submitCallback(transaction) {
        transaction.contractCreated(apiURL, contractCallback.bind(this));
    }
    function compileCallback(solidity) { 
        submitSolidity(apiURL, fromAccount, value, gasPrice, gasLimit,
                       submitCallback.bind(this)).bind(this);
    }
    compileSolidity(apiURL, compileCallback.bind(this)).bind(this);
}

function submitSolidity(apiURL, fromAccount, value,
                            gasPrice, gasLimit, callback) {
    var submitTX = new Transaction(fromAccount, new Contract(), this.vmCode,
                                   value, gasPrice, gasLimit);
    submitTX.send(apiURL, callback);
}

function compileSolidity(apiURL, callback) {
    function getSolc(responseText) {
        var solcResult = JSON.parse(responseText);
        if (solcResult["contracts"].length != 1) {
            console.log("Code must define one and only one contract");
            return;
        }
        var name = solcResult["contracts"][0]["name"];
        this.symtab = solcResult["xabis"][0][name];
        this.abi = solcResult["abis"][0]["abi"];
        this.vmCode = solcResult["contracts"][0]["bin"];
        if (typeof callback === "function") {
            callback(this);
        }
    }

    postAPI(apiURL + "/solc", "src=" + encodeURIComponent(this.code), getSolc);
}

function postAPI(postURL, params, callback) {
    var oReq = new XMLHttpRequest();
    oReq.open("POST", postURL, true);

    oReq.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

    oReq.onload = function () { 
        if(oReq.readyState == 4 && oReq.status == 200) {
            if (typeof callback === "function") {
                callback(this.responseText);
            }
        }
        else {
            console.log(this.responseText);            
        }
    }

    oReq.send(params);
}
