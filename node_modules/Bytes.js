var Int = require("Int.js")

module.exports = Bytes;

function Bytes(x, isFixed) {
    if (isFixed === undefined) {
        isFixed = true;
    }
    if (this instanceof Bytes) {
        var result;
        if (Buffer.isBuffer(x)) {
            result = new Buffer(x);
        }
        else {
            result = hexStringToBuffer(x);
        }
        Object.defineProperties(result, {
            encoding : {
                value: encodingBytes,
                enumerable: true
            },
            toString : {
                value: toStringBytes,
                enumerable: true
            },
            toJSON : {
                value: toJSONBytes,
                enumerable: true
            },
            isFixed : {
                value : isFixed,
                enumerable: true
            },
            constructor : {
                value : Bytes,
                enumerable: true
            }
        });
        return result;
    }
    else {
        return new Bytes(x, isFixed);
    }
}

function encodingBytes() {
    var result = this.toJSON();
    while (result.length % 32 != 0) {
        result = result + "00";
    }

    if (!this.isFixed) {
        var len = Int(this.length);
        result = len.encoding() + result;
    }
    
    return result;
}

function toJSONBytes () {
    return Buffer.prototype.toString.call(this,"hex");
}

function toStringBytes() {
    return Buffer.prototype.toString.call(this,"ascii");
}

function hexStringToBuffer(hexString) {
    if (hexString.slice(0,2) === "0x") {
        hexString = hexString.slice(2);
    }
    if (hexString.length % 2 != 0) {
        hexString = "0" + hexString;
    }

    var byteLength = hexString.length/2;
    var result = Buffer(byteLength);
    result.write(hexString, 0, byteLength, "hex");
    return result;
}
